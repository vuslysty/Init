# Exercise 2B
# Identify and display the Ethernet interface characteristics:
# (b) Identify all IP adresses which are part of the same subnet

# Read and save row from ifconfig, which contain info about this computer's network (networkMask, ipAddress, broadcast)
configRow=$(ifconfig en0 | grep -E 'inet.{0,}netmask.{0,}broadcast.{0,}');

# Save broadcast address
bc=$(echo $configRow | cut -d ' ' -f 6);

# Ping to broadcast (without printing pongs which returned)
ping -c 2 $bc > /dev/zero;

# Save ip addresses in hexadecimal format
hexIpMap=$(arp -a | cut -d " " -f 2 | sed -e "s/[()]//g" -e "s/\./ /g")
hexIpMap=$( printf "0x%0.2x%0.2x%0.2x%0.2x\n" $hexIpMap )

# Counting all available ip addresses
countIp=$(echo "$hexIpMap" | wc -l | sed 's/ //g');

# Save network mask
networkMask=$(echo "$configRow" | cut -d ' ' -f 4);

# Computing network address (MyIp AND NetworkMask)
network=$(printf "0x%0.2x%0.2x%0.2x%0.2x" $(echo "$configRow" | cut -d " " -f 2 | sed 's/\./ /g'));
network=$(( network & networkMask ));

# Save all hexadecimal ip addresses in massiv
masIp=( $hexIpMap );

# Start main cycle where we choose just those addresses which are in our network
for (( count = 0 ; count < countIp; count++ )) do
  if (( $((masIp[count] & networkMask)) == network )); then
    echo $(printf "%d.%d.%d.%d" $(echo "${masIp[$count]}" | sed 's/0x//' | sed 's/../0x& /g' ))
  fi
done;
